"""
Django settings for scanheritage project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
import  dj_database_url


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('DJANGO_SECRET_KEY', default='django-insecure-secret-key')

DEVELOPMENT_MODE = config('DEBUG', default=False, cast=bool)
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = DEVELOPMENT_MODE

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1'
]


# Application definition

INSTALLED_APPS = [
    'jazzmin',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    "allauth.socialaccount.providers.google",

    'theme',
    'tailwind',

    'heritage',
    'orders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "allauth.account.middleware.AccountMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'scanheritage.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'templates', 'allauth'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'scanheritage.wsgi.application'

AUTHENTICATION_BACKENDS = [  
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"
CRISPY_TEMPLATE_PACK = "tailwind"

# Tailwind settings
TAILWIND_APP_NAME = 'theme'
INTERNAL_IPS = [
    "127.0.0.1",
]

if DEVELOPMENT_MODE:
    NPM_BIN_PATH = r"C:\Program Files\nodejs\npm.cmd"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

if DEVELOPMENT_MODE:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': dj_database_url.parse(os.getenv('DATABASE_URL'))
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-ie'  # English (Ireland)

TIME_ZONE = 'Europe/Dublin'

USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') 
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


if DEVELOPMENT_MODE:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
    DEFAULT_FROM_EMAIL = 'qrmem.com'
else:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_USE_TLS = True
    EMAIL_PORT = 587
    EMAIL_HOST = 'smtp.gmail.com'
    EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
    EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
    DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='qrmem.com')

# SITE_ID is a setting that specifies the ID of the current site in a multi-site configuration.
# By default, Django assumes a single-site configuration with a SITE_ID of 1,
# but you can configure and manage multiple sites within a single Django project if needed.
SITE_ID = 1

# LOGIN_REDIRECT_URL = "/"
# LOGOUT_REDIRECT_URL = "/"
# # ACCOUNT_AUTHENTICATION_METHOD = "email"
# ACCOUNT_USERNAME_REQUIRED = False
# # ACCOUNT_EMAIL_VERIFICATION = "optional"

# EMAIL_BACKENDS = 'django.core.mail.backends.console.EmailBackend'
# ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
# # These three email settings here make it so that an email is required to register for the site.
# ACCOUNT_EMAIL_REQUIRED = True
# # Verifying your email is mandatory so we know users are using a real email.
# ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
#  # And they're gonna be required to enter their email twice on the registration page
# ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = True
# # to make sure that they haven't made any typos.

# # Finally we're setting a minimum username length of four characters.
# ACCOUNT_USERNAME_MIN_LENGTH = 4
# # And specifying a login url
# LOGIN_URL = '/accounts/login/'


# if not DEVELOPMENT_MODE:
#     # Cache control
#     AWS_S3_OBJECT_PARAMETERS = {
#         'Expires': 'Thu, 31 Dec 2099 20:00:00 GMT',
#         'CacheControl': 'max-age=94608000',
#     }

#     # Bucket Config
#     AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_S3_BUCKET_NAME')
#     AWS_S3_REGION_NAME = 'eu-west-1'
#     AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
#     AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
#     AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'

#     # Static and media files
    
#     DEFAULT_FILE_STORAGE = 'custom_storages.MediaStorage'
#     MEDIAFILES_LOCATION = 'media'

#     AWS_S3_FILE_OVERWRITE = False

#     # Override static and media URLs in production
#     # STATICFILES_STORAGE = 'custom_storages.StaticStorage'
#     # STATICFILES_LOCATION = 'static'
#     # STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{STATICFILES_LOCATION}/'
#     MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{MEDIAFILES_LOCATION}/'



# STRIPE_PUBLIC_KEY = config('STRIPE_PUBLIC_KEY', default='pk_test_1234567890')
# STRIPE_SECRET_KEY = config('STRIPE_SECRET_KEY', default='sk_test_1234567890')
# STRIPE_WH_SECRET = config('STRIPE_WH_SECRET', default='whsec_1234567890', cast=str)
# STRIPE_SUBSCRIPTION_PRICE_ID_EUR = config("STRIPE_SUBSCRIPTION_PRICE_ID_EUR", default='whsec_1234567890')
# STRIPE_SUBSCRIPTION_PRICE_ID_GBP = config("STRIPE_SUBSCRIPTION_PRICE_ID_GBP", default='price_1234567890')

# settings.py
# STRIPE_CURRENCY = 'eur'
# FREE_DELIVERY_THRESHOLD = 100
# STANDARD_DELIVERY_PERCENTAGE = 10


# SOCIAL_AUTH_GOOGLE_CLIENT_ID = os.getenv("GOOGLE_CLIENT_ID")
# SOCIAL_AUTH_GOOGLE_SECRET = os.getenv("GOOGLE_CLIENT_SECRET")
# # change to your domain in production
# SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI = os.getenv("GOOGLE_OAUTH_REDIRECT_URI", 
#                                                    "http://127.0.0.1:8000/accounts/google/login/callback/")


# SOCIALACCOUNT_PROVIDERS = {
#     'google': {
#         'SCOPE': [
#             'profile',
#             'email',
#         ],
#         'AUTH_PARAMS': {
#             'access_type': 'online',
#         },
#         'OAUTH_PKCE_ENABLED': True,
#     }
# }



# JAZZMIN_SETTINGS = {
#     # title of the window (Will default to current_admin_site.site_title if absent or None)
#     "site_title": "QR Memorial Video",

#     # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
#     "site_header": "QR Memorial Video",

#     # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
#     "site_brand": "QR Memorial Video",

#     # Logo to use for your site, must be present in static files, used for brand on top left
#     "site_logo": "images/logo.webp",

#     # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
#     "login_logo":  "images/logo.webp",

#     # # Logo to use for login form in dark themes (defaults to login_logo)
#     # "login_logo_dark": None,

#     # CSS classes that are applied to the logo above
#     "site_logo_classes": "w-full h-full object-contain",

#     "login_logo_classes": "img-fluid login-logo",  # add custom class

#     # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)
#     "site_icon": "favicon/favicon.ico",

#     # Welcome text on the login screen
#     "welcome_sign": "Welcome to the QR Memorial Video Admin Panel",

#     # Copyright on the footer
#     "copyright": "QR Memorial Video",

#     # List of model admins to search from the search bar, search bar omitted if excluded
#     # If you want to use a single search field you dont need to use a list, you can use a simple string 
#     "search_model": ["auth.User", "auth.Group"],

#     # Field name on user model that contains avatar ImageField/URLField/Charfield or a callable that receives the user
#     "user_avatar": None,

#     ############
#     # Top Menu #
#     ############

#     # Links to put along the top menu
#     "topmenu_links": [

#         # external url that opens in a new window (Permissions can be added)
#         {"name": "Back to site", "url": "/", "new_window": False},

#         # model admin to link to (Permissions checked against model)

#         # App with dropdown menu to all its models pages (Permissions checked against models)
#         {"app": "checkout"},
#         {"app": "memorial_page"},
#     ],

#     #############
#     # User Menu #
#     #############

#     # Additional links to include in the user menu on the top right ("app" url type is not allowed)
#     "usermenu_links": [
#         {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},
#         {"model": "auth.user"}
#     ],

#     #############
#     # Side Menu #
#     #############

#     # Whether to display the side menu
#     "show_sidebar": True,

#     # Whether to aut expand the menu
#     "navigation_expanded": True,

#     # Hide these apps when generating side menu e.g (auth)
#     "hide_apps": [],

#     # Hide these models when generating side menu (e.g auth.user)
#     "hide_models": [],

#     # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
#     "order_with_respect_to": ["auth", "books", "books.author", "books.book"],

#     # # Custom links to append to app groups, keyed on app name
#     # "custom_links": {
#     #     "checkout": [
#     #         {
#     #             "name": "Pending Orders",
#     #             "url": "/admin/orders/order/?status=pending",
#     #             "icon": "fas fa-clock",
#     #             "permissions": ["orders.view_order"]
#     #         }
#     #     ],
#     # },


#     # Custom icons for side menu apps/models See https://fontawesome.com/icons?d=gallery&m=free&v=5.0.0,5.0.1,5.0.10,5.0.11,5.0.12,5.0.13,5.0.2,5.0.3,5.0.4,5.0.5,5.0.6,5.0.7,5.0.8,5.0.9,5.1.0,5.1.1,5.2.0,5.3.0,5.3.1,5.4.0,5.4.1,5.4.2,5.13.0,5.12.0,5.11.2,5.11.1,5.10.0,5.9.0,5.8.2,5.8.1,5.7.2,5.7.1,5.7.0,5.6.3,5.5.0,5.4.2
#     # for the full list of 5.13.0 free icon classes
#     "icons": {
#         "auth": "fas fa-users-cog",
#         "auth.user": "fas fa-user",
#         "auth.Group": "fas fa-users",
#     },
#     # Icons that are used when one is not manually specified
#     "default_icon_parents": "fas fa-chevron-circle-right",
#     "default_icon_children": "fas fa-circle",

#     #################
#     # Related Modal #
#     #################
#     # Use modals instead of popups
#     "related_modal_active": False,

#     #############
#     # UI Tweaks #
#     #############
#     # Relative paths to custom CSS/JS scripts (must be present in static files)
#     "custom_css": "css/admin.css",
#     "custom_js": "js/admin.js",
#     # Whether to link font from fonts.googleapis.com (use custom_css to supply font otherwise)
#     "use_google_fonts_cdn": True,
#     # Whether to show the UI customizer on the sidebar
#     "show_ui_builder": True,

#     ###############
#     # Change view #
#     ###############
#     # Render out the change view as a single form, or in tabs, current options are
#     # - single
#     # - horizontal_tabs (default)
#     # - vertical_tabs
#     # - collapsible
#     # - carousel
#     "changeform_format": "horizontal_tabs",
#     # override change forms on a per modeladmin basis
#     "changeform_format_overrides": {"auth.user": "collapsible", "auth.group": "vertical_tabs"},
#     # Add a language dropdown into the admin
#     # "language_chooser": True,
# }
